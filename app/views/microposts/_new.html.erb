<% if current_kitchencar %>
  <h4 class="text-center">新規投稿</h4>
  <%= form_with model: @micropost, local: true do |f| %>
    <%= render 'shared/error_messages', object: f.object %>
    <div class="field mb-4 w-75 center-block">
      <%= f.text_area :content, class: 'form-control', :placeholder => '内容を入力' %>
      <% errors_hash(@micropost, :content).each do |error_msg| %>
        <p class="text-xs text-danger"><%= error_msg %></p>
      <% end %>
    </div>
    <div class="image mb-3 w-75 center-block">
      <%= f.file_field :images, multiple: true, class: 'form-control' %>
    </div>

    <div class="w-100">

      <div class="text-center mb-4">
        <input id="address" type="textbox" placeholder="場所を入力してください" class="w-25">
        <input type="button" class="btn btn-success" value="検索" onclick="codeAddress()">
        <% if errors_hash(@micropost, :latitude) != [] %>
          <p class="text-xs text-danger">位置を指定してください</p>
        <% end %>
      </div>

      <div id='map' class="center-block mb-4"></div>

      <style>
          #map {
              width: 70%;
              padding: 0 0 50%;
          }
      </style>

      <script>
          let map
          let marker

          function initMap() {
              geocoder = new google.maps.Geocoder()

              map = new google.maps.Map(document.getElementById('map'), {
                  center: {lat: <%= @initial_latitude %>, lng: <%= @initial_longitude %>},
                  zoom: 15
              });

              marker = create_marker({
                  position: {lat: <%= @initial_latitude %>, lng: <%= @initial_longitude %>},
                  map: map,
                  draggable: true
              });
              google.maps.event.addListener(marker, 'dragend', function (ev) {
                  document.getElementById('lat').value = ev.latLng.lat();
                  document.getElementById('lng').value = ev.latLng.lng();
              });
          }

          let geocoder

          function deleteMakers() {
              if (marker != null) {
                  marker.setMap(null);
              }
              marker = null;
          }

          function codeAddress() {
              let inputAddress = document.getElementById('address').value;

              geocoder.geocode({'address': inputAddress}, function (results, status) {
                  if (status == 'OK') {
                      deleteMakers();
                      map.setCenter(results[0].geometry.location);
                      marker = create_marker({
                          map: map,
                          position: results[0].geometry.location,
                          draggable: true,
                      });
                      document.getElementById('lat').value = marker.position.lat();
                      document.getElementById('lng').value = marker.position.lng();
                      google.maps.event.addListener(marker, 'dragend', function (ev) {
                          document.getElementById('lat').value = ev.latLng.lat();
                          document.getElementById('lng').value = ev.latLng.lng();
                      });
                  } else {
                      alert('該当する結果がありませんでした：' + status);
                  }
              });
          }

          function create_marker(options) {
              let m = new google.maps.Marker(options);
              return m;
          }
      </script>
      <div class="field hidden">
        <%= f.label :緯度 %>
        <%= f.text_field :latitude, id: 'lat' %>
        <%= f.label :経度 %>
        <%= f.text_field :longitude, id: 'lng' %>
      </div>
    </div>
    <div class="text-center my-5">
      <%= f.submit "投稿", class: "btn btn-primary w-25" %>
    </div>
  <% end %>
<% end %>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API_KEY'] %>&callback=initMap" async defer></script>

